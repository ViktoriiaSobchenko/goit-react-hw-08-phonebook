{"version":3,"file":"static/js/259.afd40dab.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/ContactList/ContactItem.module.css?d8e1","components/ContactList/ContactItem.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.js","webpack://react-homework-template/./src/pages/Contacts.module.css?8552","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, contactFilter) => {\n    const normalisedFilter = contactFilter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalisedFilter)\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport css from './ContactForm.module.css';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const inputValue = contacts.find(\n      contact =>\n        contact.name.toLowerCase() === form.elements.name.value.toLowerCase()\n    );\n    inputValue\n      ? alert(inputValue.name + `is already in contacts`)\n      : dispatch(\n          addContact({\n            name: form.elements.name.value,\n            number: form.elements.number.value,\n          })\n        );\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label htmlFor=\"name\" className={css.label}>\n        Name\n      </label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        className={css.input}\n        placeholder=\"Ex. Jacob Mercer\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <label htmlFor=\"number\" className={css.label}>\n        Number\n      </label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        className={css.input}\n        placeholder=\"Ex. 222-333-5555\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <button type=\"submit\" className={css.btn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactItem_wrapper__NB3cD\",\"text\":\"ContactItem_text__HJrJd\",\"btn\":\"ContactItem_btn__yu20t\"};","import { useDispatch } from 'react-redux';\nimport { MdPermContactCalendar } from 'react-icons/md';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport PropTypes from 'prop-types';\nimport css from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const onDeleteContact = () => dispatch(deleteContact(id));\n  return (\n    <>\n      <MdPermContactCalendar />\n      <div className={css.wrapper}>\n        <p className={css.text}>{name}:</p>\n        <p className={css.text}>{number}</p>\n      </div>\n      <button\n        type=\"button\"\n        className={css.btn}\n        id={id}\n        onClick={onDeleteContact}\n      >\n        Delete\n      </button>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\"};","import { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\nimport PropTypes from 'prop-types';\nimport ContactItem from './ContactItem';\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul className={css.list}>\n      {visibleContacts.map(({ id, name, number }) => (\n        <li key={id} className={css.item}>\n          <ContactItem name={name} number={number} id={id} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propType = {\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string.isRequired)),\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/contacts/filterSlice';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChangeFilter = evt => {\n    dispatch(changeFilter(evt.target.value));\n  };\n\n  return (\n    <div className={css.filter}>\n      <label htmlFor=\"filter\" className={css.label}>\n        Find contacts by name\n      </label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        className={css.input}\n        onChange={onChangeFilter}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { Circles } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nfunction Loader() {\n  return (\n    <Circles\n      height=\"200\"\n      width=\"200\"\n      color=\"#ffffff\"\n      ariaLabel=\"circles-loading\"\n      wrapperClass={css.loader}\n      visible={true}\n    />\n  );\n}\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__TJkHA\",\"error_icon\":\"Contacts_error_icon__Q5SXu\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TbFaceIdError } from 'react-icons/tb';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { selectError, selectIsLoading } from '../redux/contacts/selectors';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport Filter from '../components/Filter/Filter';\nimport Loader from '../components/Loader/Loader';\nimport css from './Contacts.module.css';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && <Loader />}\n      {error && (\n        <>\n          <h2>Sory! Something went wrong... Try again later</h2>\n          <TbFaceIdError className={css.error_icon} />\n        </>\n      )}\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","contactFilter","normalisedFilter","toLowerCase","contact","name","includes","ContactForm","dispatch","useDispatch","useSelector","onSubmit","evt","preventDefault","form","currentTarget","inputValue","find","elements","value","alert","addContact","number","reset","className","css","htmlFor","type","placeholder","pattern","title","required","id","onClick","deleteContact","ContactList","visibleContacts","map","propType","PropTypes","onChange","changeFilter","target","height","width","color","ariaLabel","wrapperClass","visible","Contacts","useEffect","fetchContacts"],"sourceRoot":""}